{
  "name": "Mechanical Best Friends",
  "type": "feat",
  "img": "icons/svg/item-bag.svg",
  "data": {
    "description": {
      "value": "<p>The technician gains either the Beastmastery sphere Animal Companion or Pet talent as a bonus talent, even if he does not possess the Beastmastery base sphere. The technician may use his ranks in Craft (mechanical) or Knowledge (engineering) in place of his base attack bonus when determining his effective druid level for the Animal Companion talent (not his base attack bonus -3) and his arcane caster level for the Pet talent. If the technician gains this technical insight a second time, he gains whichever talent he did not choose the first time (between Animal Companion and Pet).</p>\n<p>The technician can spend 8 hours creating a construct in the likeness of an animal companion or familiar, or modify their existing animal companion or familiar, to create a construct companion or familiar (hereby referred to as &#8220;construct pet&#8221;). A construct pet uses the appropriate animal companion or familiar&#8217;s base statistics and is otherwise treated as a normal animal companion or familiar, with the following exceptions:</p>\n<ul>\n<li><strong>Type:</strong> A construct pet&#8217;s type changes to construct and gains all the immunities and properties of the construct type (except immunity to mind-affecting effects).</li>\n<li><strong>Properties:</strong> The construct pet retains its Intelligence score (and skill points) and its base attack bonus and saving throws are unchanged, possessing a lower base attack bonus but higher saving throws than a normal construct of its Hit Dice. A construct pet has no Constitution score. Construct animal companions gain bonus hit points appropriate for a construct of its size. Construct familiars determine their statistics normally for a familiar, using their master&#8217;s statistics where appropriate after applying these changes. A construct pet cannot be awakened and cannot be modified as a normal construct can.</li>\n<li><strong>Technician Synergy:</strong> The technician can repair their construct pet as though it were an independent invention and does not need to spend money on raw materials to do so. Additionally, a construct pet is automatically trained and aware of how to use and activate the technician&#8217;s inventions as though it were the technician, and does not suffer penalties for using one.</li>\n<li><strong>Still An Animal:</strong> The technician&#8217;s construct pet is treated as an animal ally for the Beastmastery sphere, despite it being a construct, and the technician can use the Handle Animal skill on their construct pet normally for all purposes. When handling his construct pet, the technician may use his bonus in Craft (mechanical) or Knowledge (engineering) instead of his bonus in Handle Animal.</li>\n</ul>\n<p>If the technician&#8217;s animal companion or familiar would die, or their construct pet is destroyed, instead of finding a new animal companion or familiar, the technician can spend 8 hours either modifying the animal companion or familiar to become a construct pet or repairing their construct pet, returning it back to life.</p>\n<p><strong>Special:</strong> If the technician gains the ability to add a subtype to an independent invention, he may give his construct pet one subtype (a construct pet cannot possess more than one subtype this way). The technician can add or change a subtype granted this way whenever he spends 8 hours repairing or building a construct pet.</p>\n",
      "chat": "",
      "unidentified": ""
    },
    "tags": [],
    "activation": {
      "cost": 1,
      "type": ""
    },
    "unchainedAction": {
      "activation": {
        "cost": 1,
        "type": ""
      }
    },
    "duration": {
      "value": null,
      "units": ""
    },
    "target": {
      "value": ""
    },
    "range": {
      "value": null,
      "units": "",
      "maxIncrements": 1,
      "minValue": null,
      "minUnits": ""
    },
    "uses": {
      "value": 0,
      "per": null,
      "autoDeductCharges": true,
      "autoDeductChargesCost": "1",
      "maxFormula": ""
    },
    "measureTemplate": {
      "type": "",
      "size": "",
      "overrideColor": false,
      "customColor": "",
      "overrideTexture": false,
      "customTexture": ""
    },
    "attackName": "",
    "actionType": null,
    "attackBonus": "",
    "critConfirmBonus": "",
    "damage": {
      "parts": [],
      "critParts": [],
      "nonCritParts": []
    },
    "attackParts": [],
    "formulaicAttacks": {
      "count": {
        "formula": ""
      },
      "bonus": {
        "formula": ""
      },
      "label": null
    },
    "formula": "",
    "ability": {
      "attack": null,
      "damage": null,
      "damageMult": 1,
      "critRange": 20,
      "critMult": 2
    },
    "save": {
      "dc": 0,
      "type": "",
      "description": ""
    },
    "effectNotes": [],
    "attackNotes": [],
    "soundEffect": "",
    "changes": [],
    "changeFlags": {
      "loseDexToAC": false,
      "noEncumbrance": false,
      "mediumArmorFullSpeed": false,
      "heavyArmorFullSpeed": false
    },
    "contextNotes": [],
    "links": {
      "children": [],
      "charges": []
    },
    "tag": "",
    "useCustomTag": false,
    "armorProf": {
      "value": [],
      "custom": ""
    },
    "weaponProf": {
      "value": [],
      "custom": ""
    },
    "flags": {
      "boolean": [],
      "dictionary": []
    },
    "scriptCalls": [],
    "featType": "classFeat",
    "associations": {
      "classes": []
    },
    "showInQuickbar": false,
    "nonlethal": false,
    "abilityType": "ex",
    "crOffset": "",
    "disabled": false
  },
  "effects": [],
  "folder": null,
  "sort": 0,
  "permission": {
    "default": 0
  },
  "flags": {},
  "_id": "pMPRbof3wuevudGV"
}
